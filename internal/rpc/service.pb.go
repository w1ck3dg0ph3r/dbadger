// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: internal/rpc/service.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReadPreference int32

const (
	ReadPreference_LEADER ReadPreference = 0
	ReadPreference_LOCAL  ReadPreference = 1
)

// Enum value maps for ReadPreference.
var (
	ReadPreference_name = map[int32]string{
		0: "LEADER",
		1: "LOCAL",
	}
	ReadPreference_value = map[string]int32{
		"LEADER": 0,
		"LOCAL":  1,
	}
)

func (x ReadPreference) Enum() *ReadPreference {
	p := new(ReadPreference)
	*p = x
	return p
}

func (x ReadPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rpc_service_proto_enumTypes[0].Descriptor()
}

func (ReadPreference) Type() protoreflect.EnumType {
	return &file_internal_rpc_service_proto_enumTypes[0]
}

func (x ReadPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadPreference.Descriptor instead.
func (ReadPreference) EnumDescriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{0}
}

type Error_Code int32

const (
	Error_NO_LEADER       Error_Code = 0
	Error_EMPTY_KEY       Error_Code = 1
	Error_INVALID_KEY     Error_Code = 2
	Error_NOT_FOUND       Error_Code = 3
	Error_INVALID_REQUEST Error_Code = 4
	Error_CONFLICT        Error_Code = 5
	Error_UNAVAILABLE     Error_Code = 6
)

// Enum value maps for Error_Code.
var (
	Error_Code_name = map[int32]string{
		0: "NO_LEADER",
		1: "EMPTY_KEY",
		2: "INVALID_KEY",
		3: "NOT_FOUND",
		4: "INVALID_REQUEST",
		5: "CONFLICT",
		6: "UNAVAILABLE",
	}
	Error_Code_value = map[string]int32{
		"NO_LEADER":       0,
		"EMPTY_KEY":       1,
		"INVALID_KEY":     2,
		"NOT_FOUND":       3,
		"INVALID_REQUEST": 4,
		"CONFLICT":        5,
		"UNAVAILABLE":     6,
	}
)

func (x Error_Code) Enum() *Error_Code {
	p := new(Error_Code)
	*p = x
	return p
}

func (x Error_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Error_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rpc_service_proto_enumTypes[1].Descriptor()
}

func (Error_Code) Type() protoreflect.EnumType {
	return &file_internal_rpc_service_proto_enumTypes[1]
}

func (x Error_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Error_Code.Descriptor instead.
func (Error_Code) EnumDescriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{28, 0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Command:
	//	*Command_AddPeer
	//	*Command_RemovePeer
	//	*Command_Get
	//	*Command_GetMany
	//	*Command_GetPrefix
	//	*Command_GetRange
	//	*Command_Set
	//	*Command_SetMany
	//	*Command_Delete
	//	*Command_DeleteMany
	//	*Command_DeletePrefix
	//	*Command_DeleteRange
	//	*Command_DeleteAll
	Command isCommand_Command `protobuf_oneof:"command"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{0}
}

func (m *Command) GetCommand() isCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *Command) GetAddPeer() *CommandAddPeer {
	if x, ok := x.GetCommand().(*Command_AddPeer); ok {
		return x.AddPeer
	}
	return nil
}

func (x *Command) GetRemovePeer() *CommandRemovePeer {
	if x, ok := x.GetCommand().(*Command_RemovePeer); ok {
		return x.RemovePeer
	}
	return nil
}

func (x *Command) GetGet() *CommandGet {
	if x, ok := x.GetCommand().(*Command_Get); ok {
		return x.Get
	}
	return nil
}

func (x *Command) GetGetMany() *CommandGetMany {
	if x, ok := x.GetCommand().(*Command_GetMany); ok {
		return x.GetMany
	}
	return nil
}

func (x *Command) GetGetPrefix() *CommandGetPrefix {
	if x, ok := x.GetCommand().(*Command_GetPrefix); ok {
		return x.GetPrefix
	}
	return nil
}

func (x *Command) GetGetRange() *CommandGetRange {
	if x, ok := x.GetCommand().(*Command_GetRange); ok {
		return x.GetRange
	}
	return nil
}

func (x *Command) GetSet() *CommandSet {
	if x, ok := x.GetCommand().(*Command_Set); ok {
		return x.Set
	}
	return nil
}

func (x *Command) GetSetMany() *CommandSetMany {
	if x, ok := x.GetCommand().(*Command_SetMany); ok {
		return x.SetMany
	}
	return nil
}

func (x *Command) GetDelete() *CommandDelete {
	if x, ok := x.GetCommand().(*Command_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *Command) GetDeleteMany() *CommandDeleteMany {
	if x, ok := x.GetCommand().(*Command_DeleteMany); ok {
		return x.DeleteMany
	}
	return nil
}

func (x *Command) GetDeletePrefix() *CommandDeletePrefix {
	if x, ok := x.GetCommand().(*Command_DeletePrefix); ok {
		return x.DeletePrefix
	}
	return nil
}

func (x *Command) GetDeleteRange() *CommandDeleteRange {
	if x, ok := x.GetCommand().(*Command_DeleteRange); ok {
		return x.DeleteRange
	}
	return nil
}

func (x *Command) GetDeleteAll() *CommandDeleteAll {
	if x, ok := x.GetCommand().(*Command_DeleteAll); ok {
		return x.DeleteAll
	}
	return nil
}

type isCommand_Command interface {
	isCommand_Command()
}

type Command_AddPeer struct {
	AddPeer *CommandAddPeer `protobuf:"bytes,1,opt,name=addPeer,proto3,oneof"`
}

type Command_RemovePeer struct {
	RemovePeer *CommandRemovePeer `protobuf:"bytes,2,opt,name=removePeer,proto3,oneof"`
}

type Command_Get struct {
	Get *CommandGet `protobuf:"bytes,3,opt,name=get,proto3,oneof"`
}

type Command_GetMany struct {
	GetMany *CommandGetMany `protobuf:"bytes,4,opt,name=getMany,proto3,oneof"`
}

type Command_GetPrefix struct {
	GetPrefix *CommandGetPrefix `protobuf:"bytes,5,opt,name=getPrefix,proto3,oneof"`
}

type Command_GetRange struct {
	GetRange *CommandGetRange `protobuf:"bytes,6,opt,name=getRange,proto3,oneof"`
}

type Command_Set struct {
	Set *CommandSet `protobuf:"bytes,7,opt,name=set,proto3,oneof"`
}

type Command_SetMany struct {
	SetMany *CommandSetMany `protobuf:"bytes,8,opt,name=setMany,proto3,oneof"`
}

type Command_Delete struct {
	Delete *CommandDelete `protobuf:"bytes,9,opt,name=delete,proto3,oneof"`
}

type Command_DeleteMany struct {
	DeleteMany *CommandDeleteMany `protobuf:"bytes,10,opt,name=deleteMany,proto3,oneof"`
}

type Command_DeletePrefix struct {
	DeletePrefix *CommandDeletePrefix `protobuf:"bytes,11,opt,name=deletePrefix,proto3,oneof"`
}

type Command_DeleteRange struct {
	DeleteRange *CommandDeleteRange `protobuf:"bytes,12,opt,name=deleteRange,proto3,oneof"`
}

type Command_DeleteAll struct {
	DeleteAll *CommandDeleteAll `protobuf:"bytes,13,opt,name=deleteAll,proto3,oneof"`
}

func (*Command_AddPeer) isCommand_Command() {}

func (*Command_RemovePeer) isCommand_Command() {}

func (*Command_Get) isCommand_Command() {}

func (*Command_GetMany) isCommand_Command() {}

func (*Command_GetPrefix) isCommand_Command() {}

func (*Command_GetRange) isCommand_Command() {}

func (*Command_Set) isCommand_Command() {}

func (*Command_SetMany) isCommand_Command() {}

func (*Command_Delete) isCommand_Command() {}

func (*Command_DeleteMany) isCommand_Command() {}

func (*Command_DeletePrefix) isCommand_Command() {}

func (*Command_DeleteRange) isCommand_Command() {}

func (*Command_DeleteAll) isCommand_Command() {}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*Result_AddPeer
	//	*Result_RemovePeer
	//	*Result_Get
	//	*Result_GetMany
	//	*Result_GetPrefix
	//	*Result_GetRange
	//	*Result_Set
	//	*Result_SetMany
	//	*Result_Delete
	//	*Result_DeleteMany
	//	*Result_DeletePrefix
	//	*Result_DeleteRange
	//	*Result_DeleteAll
	Result isResult_Result `protobuf_oneof:"result"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{1}
}

func (m *Result) GetResult() isResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *Result) GetAddPeer() *ResultAddPeer {
	if x, ok := x.GetResult().(*Result_AddPeer); ok {
		return x.AddPeer
	}
	return nil
}

func (x *Result) GetRemovePeer() *ResultRemovePeer {
	if x, ok := x.GetResult().(*Result_RemovePeer); ok {
		return x.RemovePeer
	}
	return nil
}

func (x *Result) GetGet() *ResultGet {
	if x, ok := x.GetResult().(*Result_Get); ok {
		return x.Get
	}
	return nil
}

func (x *Result) GetGetMany() *ResultGetMany {
	if x, ok := x.GetResult().(*Result_GetMany); ok {
		return x.GetMany
	}
	return nil
}

func (x *Result) GetGetPrefix() *ResultGetPrefix {
	if x, ok := x.GetResult().(*Result_GetPrefix); ok {
		return x.GetPrefix
	}
	return nil
}

func (x *Result) GetGetRange() *ResultGetRange {
	if x, ok := x.GetResult().(*Result_GetRange); ok {
		return x.GetRange
	}
	return nil
}

func (x *Result) GetSet() *ResultSet {
	if x, ok := x.GetResult().(*Result_Set); ok {
		return x.Set
	}
	return nil
}

func (x *Result) GetSetMany() *ResultSetMany {
	if x, ok := x.GetResult().(*Result_SetMany); ok {
		return x.SetMany
	}
	return nil
}

func (x *Result) GetDelete() *ResultDelete {
	if x, ok := x.GetResult().(*Result_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *Result) GetDeleteMany() *ResultDeleteMany {
	if x, ok := x.GetResult().(*Result_DeleteMany); ok {
		return x.DeleteMany
	}
	return nil
}

func (x *Result) GetDeletePrefix() *ResultDeletePrefix {
	if x, ok := x.GetResult().(*Result_DeletePrefix); ok {
		return x.DeletePrefix
	}
	return nil
}

func (x *Result) GetDeleteRange() *ResultDeleteRange {
	if x, ok := x.GetResult().(*Result_DeleteRange); ok {
		return x.DeleteRange
	}
	return nil
}

func (x *Result) GetDeleteAll() *ResultDeleteAll {
	if x, ok := x.GetResult().(*Result_DeleteAll); ok {
		return x.DeleteAll
	}
	return nil
}

type isResult_Result interface {
	isResult_Result()
}

type Result_AddPeer struct {
	AddPeer *ResultAddPeer `protobuf:"bytes,1,opt,name=addPeer,proto3,oneof"`
}

type Result_RemovePeer struct {
	RemovePeer *ResultRemovePeer `protobuf:"bytes,2,opt,name=removePeer,proto3,oneof"`
}

type Result_Get struct {
	Get *ResultGet `protobuf:"bytes,3,opt,name=get,proto3,oneof"`
}

type Result_GetMany struct {
	GetMany *ResultGetMany `protobuf:"bytes,4,opt,name=getMany,proto3,oneof"`
}

type Result_GetPrefix struct {
	GetPrefix *ResultGetPrefix `protobuf:"bytes,5,opt,name=getPrefix,proto3,oneof"`
}

type Result_GetRange struct {
	GetRange *ResultGetRange `protobuf:"bytes,6,opt,name=getRange,proto3,oneof"`
}

type Result_Set struct {
	Set *ResultSet `protobuf:"bytes,7,opt,name=set,proto3,oneof"`
}

type Result_SetMany struct {
	SetMany *ResultSetMany `protobuf:"bytes,8,opt,name=setMany,proto3,oneof"`
}

type Result_Delete struct {
	Delete *ResultDelete `protobuf:"bytes,9,opt,name=delete,proto3,oneof"`
}

type Result_DeleteMany struct {
	DeleteMany *ResultDeleteMany `protobuf:"bytes,10,opt,name=deleteMany,proto3,oneof"`
}

type Result_DeletePrefix struct {
	DeletePrefix *ResultDeletePrefix `protobuf:"bytes,11,opt,name=deletePrefix,proto3,oneof"`
}

type Result_DeleteRange struct {
	DeleteRange *ResultDeleteRange `protobuf:"bytes,12,opt,name=deleteRange,proto3,oneof"`
}

type Result_DeleteAll struct {
	DeleteAll *ResultDeleteAll `protobuf:"bytes,13,opt,name=deleteAll,proto3,oneof"`
}

func (*Result_AddPeer) isResult_Result() {}

func (*Result_RemovePeer) isResult_Result() {}

func (*Result_Get) isResult_Result() {}

func (*Result_GetMany) isResult_Result() {}

func (*Result_GetPrefix) isResult_Result() {}

func (*Result_GetRange) isResult_Result() {}

func (*Result_Set) isResult_Result() {}

func (*Result_SetMany) isResult_Result() {}

func (*Result_Delete) isResult_Result() {}

func (*Result_DeleteMany) isResult_Result() {}

func (*Result_DeletePrefix) isResult_Result() {}

func (*Result_DeleteRange) isResult_Result() {}

func (*Result_DeleteAll) isResult_Result() {}

type CommandAddPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *CommandAddPeer) Reset() {
	*x = CommandAddPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandAddPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandAddPeer) ProtoMessage() {}

func (x *CommandAddPeer) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandAddPeer.ProtoReflect.Descriptor instead.
func (*CommandAddPeer) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{2}
}

func (x *CommandAddPeer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type CommandRemovePeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *CommandRemovePeer) Reset() {
	*x = CommandRemovePeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRemovePeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRemovePeer) ProtoMessage() {}

func (x *CommandRemovePeer) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRemovePeer.ProtoReflect.Descriptor instead.
func (*CommandRemovePeer) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{3}
}

func (x *CommandRemovePeer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type CommandGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadPreference ReadPreference `protobuf:"varint,1,opt,name=readPreference,proto3,enum=dbadger.ReadPreference" json:"readPreference,omitempty"`
	Key            []byte         `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CommandGet) Reset() {
	*x = CommandGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandGet) ProtoMessage() {}

func (x *CommandGet) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandGet.ProtoReflect.Descriptor instead.
func (*CommandGet) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{4}
}

func (x *CommandGet) GetReadPreference() ReadPreference {
	if x != nil {
		return x.ReadPreference
	}
	return ReadPreference_LEADER
}

func (x *CommandGet) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type CommandGetMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadPreference ReadPreference `protobuf:"varint,1,opt,name=readPreference,proto3,enum=dbadger.ReadPreference" json:"readPreference,omitempty"`
	Keys           [][]byte       `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CommandGetMany) Reset() {
	*x = CommandGetMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandGetMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandGetMany) ProtoMessage() {}

func (x *CommandGetMany) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandGetMany.ProtoReflect.Descriptor instead.
func (*CommandGetMany) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{5}
}

func (x *CommandGetMany) GetReadPreference() ReadPreference {
	if x != nil {
		return x.ReadPreference
	}
	return ReadPreference_LEADER
}

func (x *CommandGetMany) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CommandGetPrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadPreference ReadPreference `protobuf:"varint,1,opt,name=readPreference,proto3,enum=dbadger.ReadPreference" json:"readPreference,omitempty"`
	Prefix         []byte         `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *CommandGetPrefix) Reset() {
	*x = CommandGetPrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandGetPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandGetPrefix) ProtoMessage() {}

func (x *CommandGetPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandGetPrefix.ProtoReflect.Descriptor instead.
func (*CommandGetPrefix) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{6}
}

func (x *CommandGetPrefix) GetReadPreference() ReadPreference {
	if x != nil {
		return x.ReadPreference
	}
	return ReadPreference_LEADER
}

func (x *CommandGetPrefix) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

type CommandGetRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadPreference ReadPreference `protobuf:"varint,1,opt,name=readPreference,proto3,enum=dbadger.ReadPreference" json:"readPreference,omitempty"`
	Min            []byte         `protobuf:"bytes,2,opt,name=min,proto3" json:"min,omitempty"`
	Max            []byte         `protobuf:"bytes,3,opt,name=max,proto3" json:"max,omitempty"`
	Count          uint64         `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CommandGetRange) Reset() {
	*x = CommandGetRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandGetRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandGetRange) ProtoMessage() {}

func (x *CommandGetRange) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandGetRange.ProtoReflect.Descriptor instead.
func (*CommandGetRange) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{7}
}

func (x *CommandGetRange) GetReadPreference() ReadPreference {
	if x != nil {
		return x.ReadPreference
	}
	return ReadPreference_LEADER
}

func (x *CommandGetRange) GetMin() []byte {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *CommandGetRange) GetMax() []byte {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *CommandGetRange) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CommandSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CommandSet) Reset() {
	*x = CommandSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSet) ProtoMessage() {}

func (x *CommandSet) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSet.ProtoReflect.Descriptor instead.
func (*CommandSet) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{8}
}

func (x *CommandSet) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *CommandSet) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CommandSetMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *CommandSetMany) Reset() {
	*x = CommandSetMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandSetMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSetMany) ProtoMessage() {}

func (x *CommandSetMany) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSetMany.ProtoReflect.Descriptor instead.
func (*CommandSetMany) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{9}
}

func (x *CommandSetMany) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CommandSetMany) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type CommandDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CommandDelete) Reset() {
	*x = CommandDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDelete) ProtoMessage() {}

func (x *CommandDelete) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDelete.ProtoReflect.Descriptor instead.
func (*CommandDelete) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{10}
}

func (x *CommandDelete) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type CommandDeleteMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CommandDeleteMany) Reset() {
	*x = CommandDeleteMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDeleteMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDeleteMany) ProtoMessage() {}

func (x *CommandDeleteMany) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDeleteMany.ProtoReflect.Descriptor instead.
func (*CommandDeleteMany) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{11}
}

func (x *CommandDeleteMany) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CommandDeletePrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *CommandDeletePrefix) Reset() {
	*x = CommandDeletePrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDeletePrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDeletePrefix) ProtoMessage() {}

func (x *CommandDeletePrefix) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDeletePrefix.ProtoReflect.Descriptor instead.
func (*CommandDeletePrefix) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{12}
}

func (x *CommandDeletePrefix) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

type CommandDeleteRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min []byte `protobuf:"bytes,1,opt,name=min,proto3" json:"min,omitempty"`
	Max []byte `protobuf:"bytes,2,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *CommandDeleteRange) Reset() {
	*x = CommandDeleteRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDeleteRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDeleteRange) ProtoMessage() {}

func (x *CommandDeleteRange) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDeleteRange.ProtoReflect.Descriptor instead.
func (*CommandDeleteRange) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{13}
}

func (x *CommandDeleteRange) GetMin() []byte {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *CommandDeleteRange) GetMax() []byte {
	if x != nil {
		return x.Max
	}
	return nil
}

type CommandDeleteAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandDeleteAll) Reset() {
	*x = CommandDeleteAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandDeleteAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandDeleteAll) ProtoMessage() {}

func (x *CommandDeleteAll) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandDeleteAll.ProtoReflect.Descriptor instead.
func (*CommandDeleteAll) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{14}
}

type ResultAddPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultAddPeer) Reset() {
	*x = ResultAddPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultAddPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultAddPeer) ProtoMessage() {}

func (x *ResultAddPeer) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultAddPeer.ProtoReflect.Descriptor instead.
func (*ResultAddPeer) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{15}
}

type ResultRemovePeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultRemovePeer) Reset() {
	*x = ResultRemovePeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultRemovePeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultRemovePeer) ProtoMessage() {}

func (x *ResultRemovePeer) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultRemovePeer.ProtoReflect.Descriptor instead.
func (*ResultRemovePeer) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{16}
}

type ResultGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ResultGet) Reset() {
	*x = ResultGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGet) ProtoMessage() {}

func (x *ResultGet) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGet.ProtoReflect.Descriptor instead.
func (*ResultGet) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{17}
}

func (x *ResultGet) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ResultGetMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ResultGetMany) Reset() {
	*x = ResultGetMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetMany) ProtoMessage() {}

func (x *ResultGetMany) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetMany.ProtoReflect.Descriptor instead.
func (*ResultGetMany) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{18}
}

func (x *ResultGetMany) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ResultGetPrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ResultGetPrefix) Reset() {
	*x = ResultGetPrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetPrefix) ProtoMessage() {}

func (x *ResultGetPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetPrefix.ProtoReflect.Descriptor instead.
func (*ResultGetPrefix) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{19}
}

func (x *ResultGetPrefix) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ResultGetPrefix) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ResultGetRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Values [][]byte `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ResultGetRange) Reset() {
	*x = ResultGetRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetRange) ProtoMessage() {}

func (x *ResultGetRange) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetRange.ProtoReflect.Descriptor instead.
func (*ResultGetRange) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{20}
}

func (x *ResultGetRange) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ResultGetRange) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ResultSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultSet) Reset() {
	*x = ResultSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSet) ProtoMessage() {}

func (x *ResultSet) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSet.ProtoReflect.Descriptor instead.
func (*ResultSet) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{21}
}

type ResultSetMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultSetMany) Reset() {
	*x = ResultSetMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSetMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSetMany) ProtoMessage() {}

func (x *ResultSetMany) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSetMany.ProtoReflect.Descriptor instead.
func (*ResultSetMany) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{22}
}

type ResultDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultDelete) Reset() {
	*x = ResultDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDelete) ProtoMessage() {}

func (x *ResultDelete) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDelete.ProtoReflect.Descriptor instead.
func (*ResultDelete) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{23}
}

type ResultDeleteMany struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultDeleteMany) Reset() {
	*x = ResultDeleteMany{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultDeleteMany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDeleteMany) ProtoMessage() {}

func (x *ResultDeleteMany) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDeleteMany.ProtoReflect.Descriptor instead.
func (*ResultDeleteMany) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{24}
}

type ResultDeletePrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultDeletePrefix) Reset() {
	*x = ResultDeletePrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultDeletePrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDeletePrefix) ProtoMessage() {}

func (x *ResultDeletePrefix) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDeletePrefix.ProtoReflect.Descriptor instead.
func (*ResultDeletePrefix) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{25}
}

type ResultDeleteRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *ResultDeleteRange) Reset() {
	*x = ResultDeleteRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultDeleteRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDeleteRange) ProtoMessage() {}

func (x *ResultDeleteRange) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDeleteRange.ProtoReflect.Descriptor instead.
func (*ResultDeleteRange) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{26}
}

func (x *ResultDeleteRange) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ResultDeleteAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResultDeleteAll) Reset() {
	*x = ResultDeleteAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultDeleteAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDeleteAll) ProtoMessage() {}

func (x *ResultDeleteAll) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDeleteAll.ProtoReflect.Descriptor instead.
func (*ResultDeleteAll) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{27}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Error_Code `protobuf:"varint,1,opt,name=code,proto3,enum=dbadger.Error_Code" json:"code,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_internal_rpc_service_proto_rawDescGZIP(), []int{28}
}

func (x *Error) GetCode() Error_Code {
	if x != nil {
		return x.Code
	}
	return Error_NO_LEADER
}

var File_internal_rpc_service_proto protoreflect.FileDescriptor

var file_internal_rpc_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x64, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x72, 0x22, 0xe6, 0x05, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x33, 0x0a,
	0x07, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x74, 0x4d, 0x61,
	0x6e, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x48, 0x00, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x36, 0x0a,
	0x08, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x67, 0x65, 0x74,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x33,
	0x0a, 0x07, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x42, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x6c, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xd7,
	0x05, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x50, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x50, 0x65,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12, 0x3b, 0x0a,
	0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x03, 0x67, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x67,
	0x65, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x67,
	0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x48, 0x00, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x35, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x67,
	0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x79, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x27,
	0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50,
	0x65, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x5f, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x47, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x65, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x65,
	0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x61,
	0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22,
	0x6b, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x8c, 0x01, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x3c, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x21, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0x27, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x38, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6d, 0x61, 0x78, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x22, 0x21, 0x0a,
	0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x27, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x6e, 0x79, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x27,
	0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x22, 0xaa, 0x01, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x78, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x4c, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x5f, 0x4b, 0x45,
	0x59, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4b,
	0x45, 0x59, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x46,
	0x4c, 0x49, 0x43, 0x54, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49,
	0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x06, 0x2a, 0x27, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x41,
	0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x10, 0x01,
	0x32, 0xd0, 0x06, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72,
	0x1a, 0x16, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x41, 0x64, 0x64, 0x50, 0x65, 0x65, 0x72, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x50, 0x65, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x65, 0x72, 0x22,
	0x00, 0x12, 0x30, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x1a, 0x12, 0x2e,
	0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65,
	0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x17,
	0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x1a, 0x16, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x19,
	0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x17, 0x2e, 0x64, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x13, 0x2e,
	0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x65, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x17, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x1a, 0x16, 0x2e, 0x64,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x6e, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x16, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x1a, 0x15, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x12,
	0x1a, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x1a, 0x19, 0x2e, 0x64, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1c, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x1a, 0x1b, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x1a, 0x1a, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x64,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x1a, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x77, 0x31, 0x63, 0x6b, 0x33, 0x64, 0x67, 0x30, 0x70, 0x68, 0x33, 0x72, 0x2f, 0x64,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_rpc_service_proto_rawDescOnce sync.Once
	file_internal_rpc_service_proto_rawDescData = file_internal_rpc_service_proto_rawDesc
)

func file_internal_rpc_service_proto_rawDescGZIP() []byte {
	file_internal_rpc_service_proto_rawDescOnce.Do(func() {
		file_internal_rpc_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_rpc_service_proto_rawDescData)
	})
	return file_internal_rpc_service_proto_rawDescData
}

var file_internal_rpc_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internal_rpc_service_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_internal_rpc_service_proto_goTypes = []interface{}{
	(ReadPreference)(0),         // 0: dbadger.ReadPreference
	(Error_Code)(0),             // 1: dbadger.Error.Code
	(*Command)(nil),             // 2: dbadger.Command
	(*Result)(nil),              // 3: dbadger.Result
	(*CommandAddPeer)(nil),      // 4: dbadger.CommandAddPeer
	(*CommandRemovePeer)(nil),   // 5: dbadger.CommandRemovePeer
	(*CommandGet)(nil),          // 6: dbadger.CommandGet
	(*CommandGetMany)(nil),      // 7: dbadger.CommandGetMany
	(*CommandGetPrefix)(nil),    // 8: dbadger.CommandGetPrefix
	(*CommandGetRange)(nil),     // 9: dbadger.CommandGetRange
	(*CommandSet)(nil),          // 10: dbadger.CommandSet
	(*CommandSetMany)(nil),      // 11: dbadger.CommandSetMany
	(*CommandDelete)(nil),       // 12: dbadger.CommandDelete
	(*CommandDeleteMany)(nil),   // 13: dbadger.CommandDeleteMany
	(*CommandDeletePrefix)(nil), // 14: dbadger.CommandDeletePrefix
	(*CommandDeleteRange)(nil),  // 15: dbadger.CommandDeleteRange
	(*CommandDeleteAll)(nil),    // 16: dbadger.CommandDeleteAll
	(*ResultAddPeer)(nil),       // 17: dbadger.ResultAddPeer
	(*ResultRemovePeer)(nil),    // 18: dbadger.ResultRemovePeer
	(*ResultGet)(nil),           // 19: dbadger.ResultGet
	(*ResultGetMany)(nil),       // 20: dbadger.ResultGetMany
	(*ResultGetPrefix)(nil),     // 21: dbadger.ResultGetPrefix
	(*ResultGetRange)(nil),      // 22: dbadger.ResultGetRange
	(*ResultSet)(nil),           // 23: dbadger.ResultSet
	(*ResultSetMany)(nil),       // 24: dbadger.ResultSetMany
	(*ResultDelete)(nil),        // 25: dbadger.ResultDelete
	(*ResultDeleteMany)(nil),    // 26: dbadger.ResultDeleteMany
	(*ResultDeletePrefix)(nil),  // 27: dbadger.ResultDeletePrefix
	(*ResultDeleteRange)(nil),   // 28: dbadger.ResultDeleteRange
	(*ResultDeleteAll)(nil),     // 29: dbadger.ResultDeleteAll
	(*Error)(nil),               // 30: dbadger.Error
}
var file_internal_rpc_service_proto_depIdxs = []int32{
	4,  // 0: dbadger.Command.addPeer:type_name -> dbadger.CommandAddPeer
	5,  // 1: dbadger.Command.removePeer:type_name -> dbadger.CommandRemovePeer
	6,  // 2: dbadger.Command.get:type_name -> dbadger.CommandGet
	7,  // 3: dbadger.Command.getMany:type_name -> dbadger.CommandGetMany
	8,  // 4: dbadger.Command.getPrefix:type_name -> dbadger.CommandGetPrefix
	9,  // 5: dbadger.Command.getRange:type_name -> dbadger.CommandGetRange
	10, // 6: dbadger.Command.set:type_name -> dbadger.CommandSet
	11, // 7: dbadger.Command.setMany:type_name -> dbadger.CommandSetMany
	12, // 8: dbadger.Command.delete:type_name -> dbadger.CommandDelete
	13, // 9: dbadger.Command.deleteMany:type_name -> dbadger.CommandDeleteMany
	14, // 10: dbadger.Command.deletePrefix:type_name -> dbadger.CommandDeletePrefix
	15, // 11: dbadger.Command.deleteRange:type_name -> dbadger.CommandDeleteRange
	16, // 12: dbadger.Command.deleteAll:type_name -> dbadger.CommandDeleteAll
	17, // 13: dbadger.Result.addPeer:type_name -> dbadger.ResultAddPeer
	18, // 14: dbadger.Result.removePeer:type_name -> dbadger.ResultRemovePeer
	19, // 15: dbadger.Result.get:type_name -> dbadger.ResultGet
	20, // 16: dbadger.Result.getMany:type_name -> dbadger.ResultGetMany
	21, // 17: dbadger.Result.getPrefix:type_name -> dbadger.ResultGetPrefix
	22, // 18: dbadger.Result.getRange:type_name -> dbadger.ResultGetRange
	23, // 19: dbadger.Result.set:type_name -> dbadger.ResultSet
	24, // 20: dbadger.Result.setMany:type_name -> dbadger.ResultSetMany
	25, // 21: dbadger.Result.delete:type_name -> dbadger.ResultDelete
	26, // 22: dbadger.Result.deleteMany:type_name -> dbadger.ResultDeleteMany
	27, // 23: dbadger.Result.deletePrefix:type_name -> dbadger.ResultDeletePrefix
	28, // 24: dbadger.Result.deleteRange:type_name -> dbadger.ResultDeleteRange
	29, // 25: dbadger.Result.deleteAll:type_name -> dbadger.ResultDeleteAll
	0,  // 26: dbadger.CommandGet.readPreference:type_name -> dbadger.ReadPreference
	0,  // 27: dbadger.CommandGetMany.readPreference:type_name -> dbadger.ReadPreference
	0,  // 28: dbadger.CommandGetPrefix.readPreference:type_name -> dbadger.ReadPreference
	0,  // 29: dbadger.CommandGetRange.readPreference:type_name -> dbadger.ReadPreference
	1,  // 30: dbadger.Error.code:type_name -> dbadger.Error.Code
	4,  // 31: dbadger.Service.AddPeer:input_type -> dbadger.CommandAddPeer
	5,  // 32: dbadger.Service.RemovePeer:input_type -> dbadger.CommandRemovePeer
	6,  // 33: dbadger.Service.Get:input_type -> dbadger.CommandGet
	7,  // 34: dbadger.Service.GetMany:input_type -> dbadger.CommandGetMany
	8,  // 35: dbadger.Service.GetPrefix:input_type -> dbadger.CommandGetPrefix
	9,  // 36: dbadger.Service.GetRange:input_type -> dbadger.CommandGetRange
	10, // 37: dbadger.Service.Set:input_type -> dbadger.CommandSet
	11, // 38: dbadger.Service.SetMany:input_type -> dbadger.CommandSetMany
	12, // 39: dbadger.Service.Delete:input_type -> dbadger.CommandDelete
	13, // 40: dbadger.Service.DeleteMany:input_type -> dbadger.CommandDeleteMany
	14, // 41: dbadger.Service.DeletePrefix:input_type -> dbadger.CommandDeletePrefix
	15, // 42: dbadger.Service.DeleteRange:input_type -> dbadger.CommandDeleteRange
	16, // 43: dbadger.Service.DeleteAll:input_type -> dbadger.CommandDeleteAll
	17, // 44: dbadger.Service.AddPeer:output_type -> dbadger.ResultAddPeer
	18, // 45: dbadger.Service.RemovePeer:output_type -> dbadger.ResultRemovePeer
	19, // 46: dbadger.Service.Get:output_type -> dbadger.ResultGet
	20, // 47: dbadger.Service.GetMany:output_type -> dbadger.ResultGetMany
	21, // 48: dbadger.Service.GetPrefix:output_type -> dbadger.ResultGetPrefix
	22, // 49: dbadger.Service.GetRange:output_type -> dbadger.ResultGetRange
	23, // 50: dbadger.Service.Set:output_type -> dbadger.ResultSet
	24, // 51: dbadger.Service.SetMany:output_type -> dbadger.ResultSetMany
	25, // 52: dbadger.Service.Delete:output_type -> dbadger.ResultDelete
	26, // 53: dbadger.Service.DeleteMany:output_type -> dbadger.ResultDeleteMany
	27, // 54: dbadger.Service.DeletePrefix:output_type -> dbadger.ResultDeletePrefix
	28, // 55: dbadger.Service.DeleteRange:output_type -> dbadger.ResultDeleteRange
	29, // 56: dbadger.Service.DeleteAll:output_type -> dbadger.ResultDeleteAll
	44, // [44:57] is the sub-list for method output_type
	31, // [31:44] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_internal_rpc_service_proto_init() }
func file_internal_rpc_service_proto_init() {
	if File_internal_rpc_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_rpc_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandAddPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRemovePeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandGetMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandGetPrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandGetRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandSetMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDeleteMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDeletePrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDeleteRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandDeleteAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultAddPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultRemovePeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetPrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSetMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultDeleteMany); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultDeletePrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultDeleteRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultDeleteAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_rpc_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Command_AddPeer)(nil),
		(*Command_RemovePeer)(nil),
		(*Command_Get)(nil),
		(*Command_GetMany)(nil),
		(*Command_GetPrefix)(nil),
		(*Command_GetRange)(nil),
		(*Command_Set)(nil),
		(*Command_SetMany)(nil),
		(*Command_Delete)(nil),
		(*Command_DeleteMany)(nil),
		(*Command_DeletePrefix)(nil),
		(*Command_DeleteRange)(nil),
		(*Command_DeleteAll)(nil),
	}
	file_internal_rpc_service_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Result_AddPeer)(nil),
		(*Result_RemovePeer)(nil),
		(*Result_Get)(nil),
		(*Result_GetMany)(nil),
		(*Result_GetPrefix)(nil),
		(*Result_GetRange)(nil),
		(*Result_Set)(nil),
		(*Result_SetMany)(nil),
		(*Result_Delete)(nil),
		(*Result_DeleteMany)(nil),
		(*Result_DeletePrefix)(nil),
		(*Result_DeleteRange)(nil),
		(*Result_DeleteAll)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_rpc_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_rpc_service_proto_goTypes,
		DependencyIndexes: file_internal_rpc_service_proto_depIdxs,
		EnumInfos:         file_internal_rpc_service_proto_enumTypes,
		MessageInfos:      file_internal_rpc_service_proto_msgTypes,
	}.Build()
	File_internal_rpc_service_proto = out.File
	file_internal_rpc_service_proto_rawDesc = nil
	file_internal_rpc_service_proto_goTypes = nil
	file_internal_rpc_service_proto_depIdxs = nil
}
